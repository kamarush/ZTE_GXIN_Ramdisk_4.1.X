on post-fs-data
    chown system system /sys/class/android_usb/android0/f_mass_storage/lun/file
    chmod 0660 /sys/class/android_usb/android0/f_mass_storage/lun/file
    chown system system /sys/class/android_usb/android0/f_rndis/ethaddr
    chmod 0660 /sys/class/android_usb/android0/f_rndis/ethaddr

on init
#    write /sys/class/android_usb/android0/iManufacturer $ro.product.manufacturer
#    write /sys/class/android_usb/android0/iProduct $ro.product.model
    write /sys/class/android_usb/android0/iManufacturer ZTE
    write /sys/class/android_usb/android0/iProduct ZTE-P940

# Used to disable USB when switching states
on property:sys.usb.config=none
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/bDeviceClass 0
    setprop sys.usb.state ${sys.usb.config}

# adb only USB configuration
# This should only be used during device bringup
# and as a fallback if the USB manager fails to set a standard configuration
on property:sys.usb.config=adb
    write /sys/class/android_usb/android0/enable 0

    # Intel VID/PID for ADB mode
    write /sys/class/android_usb/android0/idVendor 0x8087
    write /sys/class/android_usb/android0/idProduct 0x09ef
    write /sys/class/android_usb/android0/iProduct "Android-Phone"
    write /sys/class/android_usb/android0/functions ${sys.usb.config}
    write /sys/class/android_usb/android0/enable 1
    start adbd
    setprop sys.usb.state ${sys.usb.config}

# USB accessory configuration
on property:sys.usb.config=accessory
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 18d1
    write /sys/class/android_usb/android0/idProduct 2d00
    write /sys/class/android_usb/android0/functions ${sys.usb.config}
    write /sys/class/android_usb/android0/enable 1
    setprop sys.usb.state ${sys.usb.config}

# USB accessory configuration, with adb
on property:sys.usb.config=accessory,adb
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 18d1
    write /sys/class/android_usb/android0/idProduct 2d01
    write /sys/class/android_usb/android0/functions ${sys.usb.config}
    write /sys/class/android_usb/android0/enable 1
    start adbd
    setprop sys.usb.state ${sys.usb.config}

# USB MTP configuration
on property:sys.usb.config=mtp
    stop adbd
    write /sys/class/android_usb/android0/enable 0
    # Intel VID/PID for MTP mode
    write /sys/class/android_usb/android0/idVendor 0x19D2
    write /sys/class/android_usb/android0/idProduct 0x0383
    write /sys/class/android_usb/android0/iProduct "Android-Phone"
    write /sys/class/android_usb/android0/functions ${sys.usb.config}
    write /sys/class/android_usb/android0/enable 1
    setprop sys.usb.state ${sys.usb.config}

# USB MTP configuration, with adb
on property:sys.usb.config=mtp,adb
    stop adbd
    write /sys/class/android_usb/android0/enable 0
    # Intel PID/VID for MTP + ADB mode
    write /sys/class/android_usb/android0/idVendor 0x19D2
    write /sys/class/android_usb/android0/idProduct 0x0343
    write /sys/class/android_usb/android0/iProduct "Android-Phone"
    write /sys/class/android_usb/android0/functions ${sys.usb.config}
    write /sys/class/android_usb/android0/enable 1
    start adbd
    setprop sys.usb.state ${sys.usb.config}

# USB PTP configuration
on property:sys.usb.config=ptp
    stop adbd
    write /sys/class/android_usb/android0/enable 0
    # Intel PID/VID for PTP mode
    write /sys/class/android_usb/android0/idVendor 0x19D2
    write /sys/class/android_usb/android0/idProduct 0x0384
    write /sys/class/android_usb/android0/iProduct "Android-Phone"
    write /sys/class/android_usb/android0/functions ${sys.usb.config}
    write /sys/class/android_usb/android0/enable 1
    setprop sys.usb.state ${sys.usb.config}

# USB PTP configuration, with adb
on property:sys.usb.config=ptp,adb
    stop adbd
    write /sys/class/android_usb/android0/enable 0
    # Intel PID/VID for PTP + ADB mode
    write /sys/class/android_usb/android0/idVendor 0x19D2
    write /sys/class/android_usb/android0/idProduct 0x0345
    write /sys/class/android_usb/android0/iProduct "Android-Phone"
    write /sys/class/android_usb/android0/functions ${sys.usb.config}
    write /sys/class/android_usb/android0/enable 1
    start adbd
    setprop sys.usb.state ${sys.usb.config}


# USB RNDIS configuration
on property:sys.usb.config=rndis
    stop adbd
    write /sys/class/android_usb/android0/enable 0
    # Intel PID/VID for RNDIS mode
    write /sys/class/android_usb/android0/idVendor 0x19D2
    write /sys/class/android_usb/android0/idProduct 0x0344
    write /sys/class/android_usb/android0/iProduct "Android-Phone"
    write /sys/class/android_usb/android0/functions ${sys.usb.config}
    write /sys/class/android_usb/android0/enable 1
    setprop sys.usb.state ${sys.usb.config}

# USB RNDIS configuration, with adb
on property:sys.usb.config=rndis,adb
    stop adbd
    write /sys/class/android_usb/android0/enable 0
    # Intel PID/VID for RNDIS + ADB mode
    write /sys/class/android_usb/android0/idVendor 0x19D2
    write /sys/class/android_usb/android0/idProduct 0x0344
    write /sys/class/android_usb/android0/iProduct "Android-Phone"
    write /sys/class/android_usb/android0/functions ${sys.usb.config}
    start adbd
    write /sys/class/android_usb/android0/enable 1
    setprop sys.usb.state ${sys.usb.config}

on property:sys.usb.config=com
    stop adbd
    write /sys/class/android_usb/android0/enable 0
	write /sys/class/android_usb/android0/idVendor 19d2
    write /sys/class/android_usb/android0/idProduct 0342
    #write /sys/class/android_usb/android0/bcdDevice 0100
	#write /sys/class/android_usb/android0/iSerial $ro.serialno.com
    write /sys/class/android_usb/android0/functions ${sys.usb.config}
    write /sys/class/android_usb/android0/enable 1
    setprop sys.usb.state ${sys.usb.config}

on property:sys.usb.config=com,adb
    stop adbd
    write /sys/class/android_usb/android0/enable 0
	write /sys/class/android_usb/android0/idVendor 19d2
    write /sys/class/android_usb/android0/idProduct 0342
    #write /sys/class/android_usb/android0/bcdDevice 0100
	#write /sys/class/android_usb/android0/iSerial $ro.serialno.comadb
    write /sys/class/android_usb/android0/functions ${sys.usb.config}
    write /sys/class/android_usb/android0/enable 1
    start adbd
    setprop sys.usb.state ${sys.usb.config}
	
on property:sys.usb.config=cdrom
    stop adbd
    write /sys/class/android_usb/android0/enable 0
	write /sys/class/android_usb/android0/idVendor 19d2
    write /sys/class/android_usb/android0/idProduct 0120
    #write /sys/class/android_usb/android0/bcdDevice 0100
	#write /sys/class/android_usb/android0/iSerial $ro.serialno.comadb
    write /sys/class/android_usb/android0/functions ${sys.usb.config}
    write /sys/class/android_usb/android0/enable 1
    setprop sys.usb.state ${sys.usb.config}

# Used to set USB configuration at boot and to switch the configuration
# when changing the default configuration
on property:persist.sys.usb.config=*
    setprop sys.usb.config ${persist.sys.usb.config}

# This property trigger has added to imitiate the previous behavior of "adb root".
# The adb gadget driver used to reset the USB bus when the adbd daemon exited,
# and the host side adb relied on this behavior to force it to reconnect with the
# new adbd instance after init relaunches it. So now we force the USB bus to reset
# here when adbd sets the service.adb.root property to 1.  We also restart adbd here
# rather than waiting for init to notice its death and restarting it so the timing
# of USB resetting and adb restarting more closely matches the previous behavior.
on property:service.adb.root=1
    write /sys/class/android_usb/android0/enable 0
    restart adbd
    write /sys/class/android_usb/android0/enable 1