#
# STOP!
# DO NOT ADD TO THIS FILE
#
# This is the base system "init.rc" file. This file is largely rewritten by Google with each major
# release. We don't want to add to it - instead, we add to our own init.<whatever>.rc files. We catenate
# our init.*.rc files to this one via use of the Android.mk PRODUCT_INIT_RC_FILES variable. See AndroidBoard.mk.
#
# Even though we don't want to add to or modify lines of this file, we DO often need to change lines
# that Google has placed there. To accomplish this, we comment the lines out in this file and ADD the corrected
# lines to init.<whatever>.rc. A good example is the init.mfld.rc file in this directory.
#

on early-init
    start ueventd

# create mountpoints
    mkdir /mnt 0775 root system

on init

sysclktz 0

loglevel 3

# setup the global environment
    export PATH /sbin:/vendor/bin:/system/sbin:/system/bin:/system/xbin
    export LD_LIBRARY_PATH /vendor/lib:/system/lib:/system/lib/arm
    export ANDROID_BOOTLOGO 1
    export ANDROID_ROOT /system
    export ANDROID_ASSETS /system/app
    export ANDROID_DATA /data
    export ASEC_MOUNTPOINT /mnt/asec
    export LOOP_MOUNTPOINT /mnt/obb
    export BOOTCLASSPATH /system/framework/core.jar:/system/framework/core-junit.jar:/system/framework/bouncycastle.jar:/system/framework/ext.jar:/system/framework/framework.jar:/system/framework/android.policy.jar:/system/framework/services.jar:/system/framework/apache-xml.jar:/system/framework/filterfw.jar:/system/framework/ZteDrmClient.jar

# Backward compatibility
    symlink /system/etc /etc
    symlink /sys/kernel/debug /d

# Right now vendor lives on the same filesystem as system,
# but someday that may change.
    symlink /system/vendor /vendor

# Create cgroup mount point for cpu accounting
    mkdir /acct
    mount cgroup none /acct cpuacct
    mkdir /acct/uid

    mkdir /system
    mkdir /data 0771 system system
    mkdir /cache 0770 system cache
    mkdir /config 0500 root root

    # Directory for putting things only root should see.
    mkdir /mnt/secure 0700 root root

    # Directory for staging bindmounts
    mkdir /mnt/secure/staging 0700 root root

    # Directory-target for where the secure container
    # imagefile directory will be bind-mounted
    mkdir /mnt/secure/asec  0700 root root

    # Secure container public mount points.
    mkdir /mnt/asec  0700 root system
    mount tmpfs tmpfs /mnt/asec mode=0755,gid=1000

    # Filesystem image public mount points.
    mkdir /mnt/obb 0700 root system
    mount tmpfs tmpfs /mnt/obb mode=0755,gid=1000

    write /proc/sys/kernel/panic_on_oops 1
    write /proc/sys/kernel/hung_task_timeout_secs 0
    write /proc/cpu/alignment 4
    write /proc/sys/kernel/sched_latency_ns 10000000
    write /proc/sys/kernel/sched_wakeup_granularity_ns 2000000
    write /proc/sys/kernel/sched_compat_yield 1
    write /proc/sys/kernel/sched_child_runs_first 0

# Create cgroup mount points for process groups
    mkdir /dev/cpuctl
    mount cgroup none /dev/cpuctl cpu
    chown system system /dev/cpuctl
    chown system system /dev/cpuctl/tasks
    chmod 0777 /dev/cpuctl/tasks
    write /dev/cpuctl/cpu.shares 1024

    mkdir /dev/cpuctl/fg_boost
    chown system system /dev/cpuctl/fg_boost/tasks
    chmod 0777 /dev/cpuctl/fg_boost/tasks
    write /dev/cpuctl/fg_boost/cpu.shares 1024

    mkdir /dev/cpuctl/bg_non_interactive
    chown system system /dev/cpuctl/bg_non_interactive/tasks
    chmod 0777 /dev/cpuctl/bg_non_interactive/tasks
    # 5.0 %
    write /dev/cpuctl/bg_non_interactive/cpu.shares 52

# Change mmc queue nr_requests from 128 to 32 to reduce write latencies
    write /sys/block/mmcblk0/queue/nr_requests 32

# Allow everybody to read the xt_qtaguid resource tracking misc dev.
# This is needed by any process that uses socket tagging.
    chmod 0644 /dev/xt_qtaguid

# Intel handles this in init.<bootdisk>.rc
#on fs
## mount mtd partitions
#   # Mount /system rw first to give the filesystem a chance to save a checkpoint
#   mount yaffs2 mtd@system /system
#   mount yaffs2 mtd@system /system ro remount
#   mount yaffs2 mtd@userdata /data nosuid nodev
#   mount yaffs2 mtd@cache /cache nosuid nodev

on post-fs
    # once everything is setup, no need to modify /
    mount rootfs rootfs / ro remount

    # We chown/chmod /cache again so because mount is run as root + defaults
    chown system cache /cache
    chmod 0770 /cache

    # This may have been created by the recovery system with odd permissions
    chown system cache /cache/recovery
    chmod 0770 /cache/recovery

    #change permissions on vmallocinfo so we can grab it from bugreports
    chown root log /proc/vmallocinfo
    chmod 0440 /proc/vmallocinfo

    #change permissions on kmsg & sysrq-trigger so bugreports can grab kthread stacks
    chown root system /proc/kmsg
    chmod 0440 /proc/kmsg
    chown root system /proc/sysrq-trigger
    chmod 0220 /proc/sysrq-trigger

    # create the lost+found directories, so as to enforce our permissions
    mkdir /cache/lost+found 0770 root root

on post-fs-data
    # We chown/chmod /data again so because mount is run as root + defaults
    chown system system /data
    chmod 0771 /data

    # Create dump dir and collect dumps.
    # Do this before we mount cache so eventually we can use cache for
    # storing dumps on platforms which do not have a dedicated dump partition.
    mkdir /data/dontpanic 0750 root log

    # Collect apanic data, free resources and re-arm trigger
    copy /proc/apanic_console /data/dontpanic/apanic_console
    chown root log /data/dontpanic/apanic_console
    chmod 0640 /data/dontpanic/apanic_console

    copy /proc/apanic_threads /data/dontpanic/apanic_threads
    chown root log /data/dontpanic/apanic_threads
    chmod 0640 /data/dontpanic/apanic_threads

    write /proc/apanic_console 1

    # Collect emmc ipanic data, free resources and re-arm trigger
    copy /proc/emmc_ipanic_console /data/dontpanic/emmc_ipanic_console
    chown root log /data/dontpanic/emmc_ipanic_console
    chmod 0640 /data/dontpanic/emmc_ipanic_console

    copy /proc/emmc_ipanic_threads /data/dontpanic/emmc_ipanic_threads
    chown root log /data/dontpanic/emmc_ipanic_threads
    chmod 0640 /data/dontpanic/emmc_ipanic_threads

    exec /system/bin/rm /data/dontpanic/emmc_ipanic_logcat
    exec /system/bin/logcat -b system -b events -b main -b radio -d -v time -f /data/dontpanic/emmc_ipanic_logcat
    chown root log /data/dontpanic/emmc_ipanic_logcat
    chmod 0640 /data/dontpanic/emmc_ipanic_logcat
    exec /system/bin/logcat -b system -b events -b main -b radio -c

    #you must enable next line when you don`t use crashlogd
    #write /proc/emmc_ipanic_console 1

    # Collect fabric error data, free resources and re-arm trigger
    copy /proc/ipanic_fabric_err /data/dontpanic/ipanic_fabric_err
    chown root log /data/dontpanic/ipanic_fabric_err
    chmod 0640 /data/dontpanic/ipanic_fabric_err

    # create basic filesystem structure
    mkdir /data/misc 01771 system misc
    mkdir /data/misc/bluetoothd 0770 bluetooth bluetooth
    mkdir /data/misc/bluetooth 0770 system system
    mkdir /data/misc/keystore 0700 keystore keystore
    mkdir /data/misc/keychain 0771 system system
    mkdir /data/misc/vpn 0770 system vpn
    mkdir /data/misc/systemkeys 0700 system system
    mkdir /data/local 0751 root root
    mkdir /data/local/tmp 0771 shell shell
    mkdir /data/data 0771 system system
    mkdir /data/app-private 0771 system system
    mkdir /data/app 0771 system system
    mkdir /data/property 0700 root root

    # create dalvik-cache, so as to enforce our permissions
    mkdir /data/dalvik-cache 0771 system system

    # create resource-cache and double-check the perms
    mkdir /data/resource-cache 0771 system system
    chown system system /data/resource-cache
    chmod 0771 /data/resource-cache

    # create the lost+found directories, so as to enforce our permissions
    mkdir /data/lost+found 0770 root root

    # create directory for DRM plug-ins
    mkdir /data/drm 0774 drm drm

    #** ZTE_MODIFY wuguofeng, 2012-04-16, create the OMA directories, so as to enforce our permissions #
    mkdir /data/oma 0774
    chmod 0777 /data/oma
    mkdir /data/oma/conf 0774
    chmod 0777 /data/oma/conf
    mkdir /data/oma/rights 0774
    chmod 0777 /data/oma/rights
    mkdir /data/oma/rights/objects 0774
    chmod 0777 /data/oma/rights/objects
    #** ZTE_MODIFY END

    # If there is no fs-post-data action in the init.<device>.rc file, you
    # must uncomment this line, otherwise encrypted filesystems
    # won't work.
    # Set indication (checked by vold) that we have finished this action
    #setprop vold.post_fs_data_done 1

    chown system system /sys/class/android_usb/android0/f_mass_storage/lun/file
    chmod 0660 /sys/class/android_usb/android0/f_mass_storage/lun/file
    chown system system /sys/class/android_usb/android0/f_rndis/ethaddr
    chmod 0660 /sys/class/android_usb/android0/f_rndis/ethaddr

on boot
# basic network init
    ifup lo
    hostname localhost
    domainname localdomain

# set RLIMIT_NICE to allow priorities from 19 to -20
    setrlimit 13 40 40

# Memory management.  Basic kernel parameters, and allow the high
# level system server to be able to adjust the kernel OOM driver
# paramters to match how it is managing things.
    write /proc/sys/vm/overcommit_memory 1
    write /proc/sys/vm/min_free_order_shift 4
    chown root system /sys/module/lowmemorykiller/parameters/adj
    chmod 0664 /sys/module/lowmemorykiller/parameters/adj
    chown root system /sys/module/lowmemorykiller/parameters/minfree
    chmod 0664 /sys/module/lowmemorykiller/parameters/minfree

    # Set init and its forked children's oom_adj.
    write /proc/1/oom_adj -16

    # Tweak background writeout
    write /proc/sys/vm/dirty_expire_centisecs 200
    write /proc/sys/vm/dirty_background_bytes 5242880

    # Permissions for System Server and daemons.
    chown radio system /sys/android_power/state
    chown radio system /sys/android_power/request_state
    chown radio system /sys/android_power/acquire_full_wake_lock
    chown radio system /sys/android_power/acquire_partial_wake_lock
    chown radio system /sys/android_power/release_wake_lock
    chown radio system /sys/power/state
    chown radio system /sys/power/wake_lock
    chown radio system /sys/power/wake_unlock
    chmod 0660 /sys/power/state
    chmod 0660 /sys/power/wake_lock
    chmod 0660 /sys/power/wake_unlock
    chown system system /sys/class/timed_output/vibrator/enable
    chown system system /sys/class/leds/keyboard-backlight/brightness
    chown system system /sys/class/leds/lcd-backlight/brightness
    chown system system /sys/class/leds/button-backlight/brightness
    chown system system /sys/class/leds/jogball-backlight/brightness
    chown system system /sys/class/leds/red/brightness
    chown system system /sys/class/leds/green/brightness
    chown system system /sys/class/leds/blue/brightness
    chown system system /sys/class/leds/red/device/grpfreq
    chown system system /sys/class/leds/red/device/grppwm
    chown system system /sys/class/leds/red/device/blink
    chown system system /sys/class/leds/red/brightness
    chown system system /sys/class/leds/green/brightness
    chown system system /sys/class/leds/blue/brightness
    chown system system /sys/class/leds/red/device/grpfreq
    chown system system /sys/class/leds/red/device/grppwm
    chown system system /sys/class/leds/red/device/blink
    chown system system /sys/class/timed_output/vibrator/enable
    chown system system /sys/module/sco/parameters/disable_esco
    chown system system /sys/kernel/ipv4/tcp_wmem_min
    chown system system /sys/kernel/ipv4/tcp_wmem_def
    chown system system /sys/kernel/ipv4/tcp_wmem_max
    chown system system /sys/kernel/ipv4/tcp_rmem_min
    chown system system /sys/kernel/ipv4/tcp_rmem_def
    chown system system /sys/kernel/ipv4/tcp_rmem_max
    chown root radio /proc/cmdline

# Define TCP buffer sizes for various networks
#   ReadMin, ReadInitial, ReadMax, WriteMin, WriteInitial, WriteMax,
    setprop net.tcp.buffersize.lte     524288,1048576,2097152,262144,524288,1048576

# Set this property so surfaceflinger is not started by system_init
    setprop system_init.startsurfaceflinger 1

    class_start core
    class_start main

on nonencrypted
    class_start late_start

# on charger
#     class_start charger

on property:vold.decrypt=trigger_reset_main
    class_reset main

on property:vold.decrypt=trigger_load_persist_props
    load_persist_props

on property:vold.decrypt=trigger_post_fs_data
    trigger post-fs-data

on property:vold.decrypt=trigger_restart_min_framework
    class_start main

on property:vold.decrypt=trigger_restart_framework
    class_start main
    class_start late_start

on property:vold.decrypt=trigger_shutdown_framework
    class_reset late_start
    class_reset main
	
on property:sys.property_forcedshutdown=1
    write /sys/module/intel_mid_osip/parameters/force_shutdown_occured 1

# Used to disable USB when switching states
# on property:sys.usb.config=none
#    stop adbd
#    write /sys/class/android_usb/android0/enable 0
#    write /sys/class/android_usb/android0/bDeviceClass 0
#    setprop sys.usb.state $sys.usb.config

# adb only USB configuration
# This should only be used during device bringup
# and as a fallback if the USB manager fails to set a standard configuration
# on property:sys.usb.config=adb
#    write /sys/class/android_usb/android0/enable 0
#    write /sys/class/android_usb/android0/idVendor 18d1
#    write /sys/class/android_usb/android0/idProduct D002
#    write /sys/class/android_usb/android0/functions $sys.usb.config
#    write /sys/class/android_usb/android0/enable 1
#    start adbd
#    setprop sys.usb.state $sys.usb.config

# USB accessory configuration
# on property:sys.usb.config=accessory
#    write /sys/class/android_usb/android0/enable 0
#    write /sys/class/android_usb/android0/idVendor 18d1
#    write /sys/class/android_usb/android0/idProduct 2d00
#    write /sys/class/android_usb/android0/functions $sys.usb.config
#    write /sys/class/android_usb/android0/enable 1
#    setprop sys.usb.state $sys.usb.config

# USB accessory configuration, with adb
# on property:sys.usb.config=accessory,adb
#    write /sys/class/android_usb/android0/enable 0
#    write /sys/class/android_usb/android0/idVendor 18d1
#    write /sys/class/android_usb/android0/idProduct 2d01
#    write /sys/class/android_usb/android0/functions $sys.usb.config
#    write /sys/class/android_usb/android0/enable 1
#    start adbd
#    setprop sys.usb.state $sys.usb.config

# Used to set USB configuration at boot and to switch the configuration
# when changing the default configuration
#on property:persist.sys.usb.config=*
#    setprop sys.usb.config $persist.sys.usb.config

## Daemon processes to be run by init.
##
service ueventd /sbin/ueventd
    class core
    critical

service console /system/bin/sh
    class core
    console
    disabled
    user shell
    group log

on property:ro.debuggable=1
    start console

# adbd is controlled via property triggers in init.<platform>.usb.rc
service adbd /sbin/adbd
    class core
    disabled

# adbd on at boot in emulator
on property:ro.kernel.qemu=1
    start adbd

# This property trigger has added to imitiate the previous behavior of "adb root".
# The adb gadget driver used to reset the USB bus when the adbd daemon exited,
# and the host side adb relied on this behavior to force it to reconnect with the
# new adbd instance after init relaunches it. So now we force the USB bus to reset
# here when adbd sets the service.adb.root property to 1.  We also restart adbd here
# rather than waiting for init to notice its death and restarting it so the timing
# of USB resetting and adb restarting more closely matches the previous behavior.
# on property:service.adb.root=1
#    write /sys/class/android_usb/android0/enable 0
#    restart adbd
#    write /sys/class/android_usb/android0/enable 1

#service servicemanager /system/bin/servicemanager
#    class core
#    user system
#    group system
#    critical
#    onrestart restart zygote
#    onrestart restart media

#service vold /system/bin/vold
#    class core
#    socket vold stream 0660 root mount
#    ioprio be 2

service netd /system/bin/netd
    class main
    socket netd stream 0660 root system
    socket dnsproxyd stream 0660 root inet

service debuggerd /system/bin/debuggerd
    class main

#service ril-daemon /system/bin/rild
#   class main
#   socket rild stream 660 root radio
#   socket rild-debug stream 660 radio system
#   user root
#   group radio cache inet misc audio sdcard_rw log

#service surfaceflinger /system/bin/surfaceflinger
#    class main
#    user system
#    group graphics
#    onrestart restart zygote

#service zygote /system/bin/app_process -Xzygote /system/bin --zygote --start-system-server
#    class main
#    socket zygote stream 666
#    onrestart write /sys/android_power/request_state wake
#    onrestart write /sys/power/state on
#    onrestart restart media
#    onrestart restart netd

#service drm /system/bin/drmserver
#    class main
#    user drm
#    group system inet drmrpc

#service media /system/bin/mediaserver
#    class main
#    user media
#    group system audio camera inet net_bt net_bt_admin net_bw_acct drmrpc net_raw
#    ioprio rt 4

service bootanim /system/bin/bootanimation
    class main
    user graphics
    group graphics
    disabled
    oneshot

service dbus /system/bin/dbus-daemon --system --nofork
    class main
    socket dbus stream 660 bluetooth bluetooth
    user bluetooth
    group bluetooth net_bt_admin

#service bluetoothd /system/bin/bluetoothd -n
#   class main
#   socket bluetooth stream 660 bluetooth bluetooth
#   socket dbus_bluetooth stream 660 bluetooth bluetooth
#   # init.rc does not yet support applying capabilities, so run as root and
#   # let bluetoothd drop uid to bluetooth with the right linux capabilities
#   group bluetooth net_bt_admin misc
#   disabled

#service installd /system/bin/installd
#    class main
#    socket installd stream 600 system system

service flash_recovery /system/etc/install-recovery.sh
    class main
    oneshot

#service racoon /system/bin/racoon
#    class main
#    socket racoon stream 600 system system
#    # IKE uses UDP port 500. Racoon will setuid to vpn after binding the port.
#    group vpn net_admin inet
#    disabled
#    oneshot

#service mtpd /system/bin/mtpd
#    class main
#    socket mtpd stream 600 system system
#    user vpn
#    group vpn net_admin inet net_raw
#    disabled
#    oneshot

#service keystore /system/bin/keystore /data/misc/keystore
#    class main
#    user keystore
#    group keystore
#    socket keystore stream 666

service dumpstate /system/bin/dumpstate -s
    class main
    socket dumpstate stream 0660 shell log
    disabled
    oneshot

# init.mfld.rc is catenated at the end of init.rc via the use
# of PRODUCT_INIT_RC_FILES. See AndroidBoard.mk


# This section taken from init.goldfish.sh
on early-init
    export EXTERNAL_STORAGE /mnt/sdcard
    mkdir /mnt/sdcard 0000 system system
    # for backwards compatibility
    symlink /mnt/sdcard /sdcard

    # set permission for charger-mode
    chmod 0777 /charger

# This section taken from init.goldfish.sh
on boot
# enable Google-specific location features,
# like NetworkLocationProvider and LocationCollector
    setprop ro.com.google.locationfeatures 1

# For testing, it can be handy to pre-initialize your google account.
# If you do so... be sure to use an account who's password does not need
# to be secret
#   setprop ro.config.hosted_account username@hosteddomain.org:password
#   setprop ro.config.google_account username@gmail.com:password

on boot
    # MRST platform specific setup.
    # The permissions below should be tighter.
    chown system system /dev/card0
    chmod 0666 /dev/card0
    mkdir /dev/dri
    symlink /dev/dri/card0 /dev/card0
    chown system system /dev/lpe
    chown system system /dev/lpe_ctrl
    chmod 0666 /dev/lpe
    chmod 0666 /dev/lpe_ctrl
    chmod 0777 /dev/cmt_speech

    # IMG Graphics specific setup. See also "service pvrsrvinit"
    # The permissions below should be tighter.
    chown system system /dev/card0
    chown system system /sys/class/backlight/psb-bl/brightness
    chown system system /sys/class/backlight/psb-bl/max_brightness
    chown system system /sys/class/backlight/psb-bl/actual_brightness
    chmod 0666 /dev/card0
    chmod 0664 /sys/class/backlight/psb-bl/brightness
    chmod 0664 /sys/class/backlight/psb-bl/max_brightness
    chmod 0664 /sys/class/backlight/psb-bl/actual_brightness

    class_start default

on post-fs
    write /proc/sys/kernel/ctrl-alt-del 0

    # Create logs folder
    mkdir /data/logs
    chown root log /data/logs
    # Here /data/logs is changed to 0750, then crashlogd will be
    # change /data/logs to 777.
    chmod 0750 /data/logs

    mkdir /data/tombstones 0755 system system
    mkdir /data/system/    0775 system system
    mkdir /data/system/dropbox 0700 system system
    mkdir /data/logs/modemcrash 0775 system system
    mkdir /data/logs/stats 0775 system system

#llc 20120706 add
    mkdir /data/local 0771 shell shell
    mkdir /data/local/log 0777 system system
    chown system system /data/local/log
    chmod 0777 /data/local/log    


    # make nodes for alsa-lib
    symlink /dev/snd/pcmC0D0c /dev/pcmC0D0c
    symlink /dev/snd/pcmC0D0p /dev/pcmC0D0p
    symlink /dev/snd/controlC0 /dev/controlC0
    symlink /dev/snd/timer /dev/timer

#settings network buffers sizes to improve cellular data throughput
    write /proc/sys/net/core/rmem_max 256960
    write /proc/sys/net/ipv4/tcp_mem  "83520 111360 256960"

    setprop net.tcp.buffersize.default 83520,111360,256960,4096,16384,110208
    setprop net.tcp.buffersize.umts    83520,111360,256960,4096,16384,110208
    setprop net.tcp.buffersize.hspa    83520,111360,256960,4096,16384,110208
    setprop net.tcp.buffersize.edge    83520,111360,256960,4096,16384,35040
    setprop net.tcp.buffersize.gprs    83520,111360,256960,4096,8760,11680

on early-boot
# enable core dump function when application crash
    #setrlimit 4 -1 -1 set it at init.c
    mkdir /data/logs/core
    chown root log /data/logs/core
    chmod 0777 /data/logs/core
    write /proc/sys/kernel/core_pattern /data/logs/core/%t_%e_%p.core
    write /proc/sys/fs/suid_dumpable 1
    start crashlogd

on property:persist.service.crashlog.enable=1
    start crashlogd

on property:persist.service.crashlog.enable=0
    stop crashlogd


on property:persist.service.aplogfs.enable=1
    restart ap_logfs

on property:persist.service.aplogfs.enable=0
    stop ap_logfs

on property:persist.service.apklogfs.enable=1
    restart apk_logfs

on property:persist.service.apklogfs.enable=0
    stop apk_logfs

on property:persist.service.apklogsd.enable=1
    restart apk_logsd

on property:persist.service.apklogsd.enable=0
    stop apk_logsd

on property:persist.service.aplogsd.enable=1
    restart ap_logsd

on property:persist.service.aplogsd.enable=0
    stop ap_logsd

on property:persist.service.aplogpti.enable=1
    write /sys/module/logger_pti/parameters/out "main,system,radio"

on property:persist.service.aplogpti.enable=0
    write /sys/module/logger_pti/parameters/out ""

on property:persist.service.aklogpti.enable=1
   write /sys/module/logger_pti/parameters/out "main,system,radio,kernel"

on property:persist.service.aklogpti.enable=0
   write /sys/module/logger_pti/parameters/out ""

on property:sys.forcecoldboot=yes
    write /sys/module/intel_mid/parameters/force_cold_boot Y

service charger_app /charger 5 1
    class charger
    user root

service pvrsrvinit /system/bin/pvrsrvinit
    class core
    oneshot
    user root

service crashlogd /system/bin/crashlogd
    oneshot

service watchdogd /system/xbin/watchdogd
    user system
    group system
    oneshot

#service drm /system/bin/drmserver
#    class main
#    user drm
#    group system inet drmrpc security

#service media /system/bin/mediaserver
#    class main
#    user media
#    group system audio camera inet net_bt net_bt_admin net_bw_acct drmrpc net_raw security
#    ioprio rt 4

#enable Houdini for executable
service enable_houdini /system/bin/enable_houdini
    class main
    oneshot

# log services
service ap_logfs /system/bin/logcat -b system -b events -b main -b radio -n 20 -r 5000 -v threadtime -f /data/logs/aplog
    class main
    disabled

service apk_logfs /system/bin/logcat -b system -b events -b main -b radio -b kernel -n 20 -r 5000 -v threadtime -f /data/logs/aplog
    class main
    disabled

service apk_logsd /system/bin/logcat -b system -b events -b main -b radio -b kernel -n 20 -r 5000 -v threadtime -f /sdcard/aplog
    disabled

service ap_logsd /system/bin/logcat -b system -b events -b main -b radio -n 20 -r 5000 -v threadtime -f /sdcard/aplog
    disabled

on property:ro.intel.corp.email=1
    copy /system/etc/security/email.p12 /data/media/email.p12
    chmod 0666 /data/media/email.p12

#llc add ZTE logcat service
service logcat /system/bin/logcat -r 2048 -n 16 -v time -f /data/local/log/logcat.log &
    class core
    disabled
    
service logcat_radio /system/bin/logcat -b radio -r 4096 -n 24 -v time -f /data/local/log/radio.log &
    class core
    disabled
    
service logcat_events /system/bin/logcat -b events -r 1024 -n 16 -v time -f /data/local/log/events.log &
    class core
    disabled

on property:persist.sys.logcat.debug=1
    start logcat
    start logcat_radio
    start logcat_events
	
	
# Begin: denglibin@20110923
service atcmdsrv /system/bin/atcmdsrv
#   user radio
#   group radio
    disabled

on property:zte.service.atcmdsrv.enable=1
    start atcmdsrv

on property:zte.service.atcmdsrv.enable=0
    stop atcmdsrv
# End: denglibin@20110923
	
	#/*--ZTE:added by wang xiang zhi for backup 20120705-*/
# service app6939 /system/bin/app6939
#    class main    
#    user root

#
# Tweaks for the OOM killer for mfld platforms
#
on boot
# Define the oom_adj values for the classes of processes that can be
# killed by the kernel.  These are used in ActivityManagerService.
    setprop ro.FOREGROUND_APP_ADJ 0
    setprop ro.VISIBLE_APP_ADJ 1
    setprop ro.PERCEPTIBLE_APP_ADJ 2
    setprop ro.HEAVY_WEIGHT_APP_ADJ 3
    setprop ro.SECONDARY_SERVER_ADJ 4
    setprop ro.BACKUP_APP_ADJ 5
    setprop ro.HOME_APP_ADJ 6
    setprop ro.HIDDEN_APP_MIN_ADJ 7
    setprop ro.EMPTY_APP_ADJ 15

# Define the memory thresholds at which the above process classes will
# be killed.  These numbers are in pages (4k).
    # These are currently tuned for tablets with approx 1GB RAM.
    setprop ro.FOREGROUND_APP_MEM 8192
    setprop ro.VISIBLE_APP_MEM 10240
    setprop ro.PERCEPTIBLE_APP_MEM 12288
    setprop ro.HEAVY_WEIGHT_APP_MEM 12288
    setprop ro.SECONDARY_SERVER_MEM 14336
    setprop ro.BACKUP_APP_MEM 14336
    setprop ro.HOME_APP_MEM 14336
    setprop ro.HIDDEN_APP_MEM 16384
    setprop ro.EMPTY_APP_MEM 20480

# Write value must be consistent with the above properties.
# Note that the driver only supports 6 slots, so we have combined some of
# the classes into the same memory level; the associated processes of higher
# classes will still be killed first.
    write /sys/module/lowmemorykiller/parameters/adj 0,1,2,4,7,15
    write /sys/module/lowmemorykiller/parameters/minfree 8192,10240,12288,14336,16384,20480

# Perms
on post-fs-data
    chown system system /sys/class/android_usb/android0/f_mass_storage/lun/file
    chmod 0660 /sys/class/android_usb/android0/f_mass_storage/lun/file
    chown system system /sys/class/android_usb/android0/f_rndis/ethaddr
    chmod 0660 /sys/class/android_usb/android0/f_rndis/ethaddr

on init
#    write /sys/class/android_usb/android0/iManufacturer $ro.product.manufacturer
#    write /sys/class/android_usb/android0/iProduct $ro.product.model
    write /sys/class/android_usb/android0/iManufacturer ZTE
    write /sys/class/android_usb/android0/iProduct ZTE-P940

# Used to disable USB when switching states
on property:sys.usb.config=none
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/bDeviceClass 0
    setprop sys.usb.state $sys.usb.config

# adb only USB configuration
# This should only be used during device bringup
# and as a fallback if the USB manager fails to set a standard configuration
on property:sys.usb.config=adb
    write /sys/class/android_usb/android0/enable 0

    # Intel VID/PID for ADB mode
    write /sys/class/android_usb/android0/idVendor 0x8087
    write /sys/class/android_usb/android0/idProduct 0x09ef
    write /sys/class/android_usb/android0/iProduct "Android-Phone"
    write /sys/class/android_usb/android0/functions $sys.usb.config
    write /sys/class/android_usb/android0/enable 1
    start adbd
    setprop sys.usb.state $sys.usb.config

# USB accessory configuration
on property:sys.usb.config=accessory
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 18d1
    write /sys/class/android_usb/android0/idProduct 2d00
    write /sys/class/android_usb/android0/functions $sys.usb.config
    write /sys/class/android_usb/android0/enable 1
    setprop sys.usb.state $sys.usb.config

# USB accessory configuration, with adb
on property:sys.usb.config=accessory,adb
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 18d1
    write /sys/class/android_usb/android0/idProduct 2d01
    write /sys/class/android_usb/android0/functions $sys.usb.config
    write /sys/class/android_usb/android0/enable 1
    start adbd
    setprop sys.usb.state $sys.usb.config

# USB MTP configuration
on property:sys.usb.config=mtp
    write /sys/class/android_usb/android0/enable 0

    # Intel VID/PID for MTP mode
    write /sys/class/android_usb/android0/idVendor 0x19D2
    write /sys/class/android_usb/android0/idProduct 0x0383
    write /sys/class/android_usb/android0/iProduct "Android-Phone"
    write /sys/class/android_usb/android0/functions $sys.usb.config
    write /sys/class/android_usb/android0/enable 1
    setprop sys.usb.state $sys.usb.config

# USB MTP configuration, with adb
on property:sys.usb.config=mtp,adb
    write /sys/class/android_usb/android0/enable 0

    # Intel PID/VID for MTP + ADB mode
    write /sys/class/android_usb/android0/idVendor 0x19D2
    write /sys/class/android_usb/android0/idProduct 0x0343
    write /sys/class/android_usb/android0/iProduct "Android-Phone"
    write /sys/class/android_usb/android0/functions $sys.usb.config
    write /sys/class/android_usb/android0/enable 1
    start adbd
    setprop sys.usb.state $sys.usb.config

# USB PTP configuration
on property:sys.usb.config=ptp
    write /sys/class/android_usb/android0/enable 0

    # Intel PID/VID for PTP mode
    write /sys/class/android_usb/android0/idVendor 0x19D2
    write /sys/class/android_usb/android0/idProduct 0x0384
    write /sys/class/android_usb/android0/iProduct "Android-Phone"
    write /sys/class/android_usb/android0/functions $sys.usb.config
    write /sys/class/android_usb/android0/enable 1
    setprop sys.usb.state $sys.usb.config

# USB PTP configuration, with adb
on property:sys.usb.config=ptp,adb
    write /sys/class/android_usb/android0/enable 0

    # Intel PID/VID for PTP + ADB mode
    write /sys/class/android_usb/android0/idVendor 0x19D2
    write /sys/class/android_usb/android0/idProduct 0x0345
    write /sys/class/android_usb/android0/iProduct "Android-Phone"
    write /sys/class/android_usb/android0/functions $sys.usb.config
    write /sys/class/android_usb/android0/enable 1
    start adbd
    setprop sys.usb.state $sys.usb.config


# USB RNDIS configuration
on property:sys.usb.config=rndis
    write /sys/class/android_usb/android0/enable 0

    # Intel PID/VID for RNDIS mode
    write /sys/class/android_usb/android0/idVendor 0x19D2
    write /sys/class/android_usb/android0/idProduct 0x0344
    write /sys/class/android_usb/android0/iProduct "Android-Phone"
    write /sys/class/android_usb/android0/functions $sys.usb.config
    write /sys/class/android_usb/android0/enable 1
    setprop sys.usb.state $sys.usb.config

# USB RNDIS configuration, with adb
on property:sys.usb.config=rndis,adb
    write /sys/class/android_usb/android0/enable 0

    # Intel PID/VID for RNDIS + ADB mode
    write /sys/class/android_usb/android0/idVendor 0x19D2
    write /sys/class/android_usb/android0/idProduct 0x0344
    write /sys/class/android_usb/android0/iProduct "Android-Phone"
    write /sys/class/android_usb/android0/functions $sys.usb.config
    start adbd
    write /sys/class/android_usb/android0/enable 1
    setprop sys.usb.state $sys.usb.config

on property:sys.usb.config=com
    write /sys/class/android_usb/android0/enable 0
	write /sys/class/android_usb/android0/idVendor 19d2
    write /sys/class/android_usb/android0/idProduct 0342
    #write /sys/class/android_usb/android0/bcdDevice 0100
	#write /sys/class/android_usb/android0/iSerial $ro.serialno.com
    write /sys/class/android_usb/android0/functions $sys.usb.config
    write /sys/class/android_usb/android0/enable 1
    setprop sys.usb.state $sys.usb.config

on property:sys.usb.config=com,adb
    write /sys/class/android_usb/android0/enable 0
	write /sys/class/android_usb/android0/idVendor 19d2
    write /sys/class/android_usb/android0/idProduct 0342
    #write /sys/class/android_usb/android0/bcdDevice 0100
	#write /sys/class/android_usb/android0/iSerial $ro.serialno.comadb
    write /sys/class/android_usb/android0/functions $sys.usb.config
    write /sys/class/android_usb/android0/enable 1
    start adbd
    setprop sys.usb.state $sys.usb.config
	
on property:sys.usb.config=cdrom
    write /sys/class/android_usb/android0/enable 0
	write /sys/class/android_usb/android0/idVendor 19d2
    write /sys/class/android_usb/android0/idProduct 0120
    #write /sys/class/android_usb/android0/bcdDevice 0100
	#write /sys/class/android_usb/android0/iSerial $ro.serialno.comadb
    write /sys/class/android_usb/android0/functions $sys.usb.config
    write /sys/class/android_usb/android0/enable 1
    setprop sys.usb.state $sys.usb.config

# Used to set USB configuration at boot and to switch the configuration
# when changing the default configuration
on property:persist.sys.usb.config=*
    setprop sys.usb.config $persist.sys.usb.config

# This property trigger has added to imitiate the previous behavior of "adb root".
# The adb gadget driver used to reset the USB bus when the adbd daemon exited,
# and the host side adb relied on this behavior to force it to reconnect with the
# new adbd instance after init relaunches it. So now we force the USB bus to reset
# here when adbd sets the service.adb.root property to 1.  We also restart adbd here
# rather than waiting for init to notice its death and restarting it so the timing
# of USB resetting and adb restarting more closely matches the previous behavior.
on property:service.adb.root=1
    write /sys/class/android_usb/android0/enable 0
    restart adbd
    write /sys/class/android_usb/android0/enable 1

on post-fs
    # change permission for diagnostic purpose
    chown root diag /sys/module/gfx/parameters/psb_enable_pr2_cabc
    chown root diag /dev/msr0
    chown root diag /dev/msr1
    chown root diag /dev/mid_ipc
    chmod 0640 /sys/module/gfx/parameters/psb_enable_pr2_cabc
    chmod 0640 /dev/mid_ipc
    chmod 0640 /dev/msr0
    chmod 0640 /dev/msr1
